<% content_for(:title) do%>
	Dynamic Special Schedule for Part Scheduling
<% end %>

<% display_date = params[:priority_date] || Time.new.to_s(:broadcast_date_full_month) %>
<% form_tag part_press_lines_path, :method =>'get' do %>
  <%= render :partial => 'schedule_top', :locals	=> {:params=> params, :display_date => display_date, :source => 'part'} %>
  <div class = 'my-wrapper'>
  <%= render :partial => 'the_schedule', :locals	=> {:params=> params, :display_date => display_date, :source => :part} %>

<fieldset class = 'available-specials'>
  <legend>Available Specials: Part Scheduling</legend>  
  <div class = 'pretend-button'>
    <%= link_to 'Special Scheduling', special_schedule_with_date(display_date, params[:channel], params[:show], params[:template], params[:part], params[:search]) %>
    <%= link_to 'Random Scheduling', special_random_with_date(display_date, params[:channel], params[:show], params[:template], params[:search], nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, nil) %>
  </div>
  <p>
    <%= text_field_tag :search, params[:search], :size => 45 %>
    <%= submit_tag "Search", :name => nil %>
  
    <div class = 'random-template'>
      <%= label_tag :template, 'Template' %>
      <%= select_tag :template, options_for_select(@templates, params[:template]),{:onchange => 'this.form.submit()'} %>
    </div>
  </p>
  <table class = 'date-time-table'>
    <tr>
      <td><%= label_tag :start_date, 'Start Date', :class => 'date-time-table' %></td><td><%= calendar_date_select_tag :start_date, params[:start_date], {:month_year => :label, :class => 'date-time-table', :onchange => 'this.form.submit()'} %></td>
      <td><%= label_tag :end_date, 'End Date', :class => 'date-time-table' %></td><td><%= calendar_date_select_tag :end_date, params[:end_date], {:month_year => :label, :class => 'date-time-table', :onchange => 'this.form.submit()'} %></td>
      <td><%= link_to 'Sync to schedule date', special_part_with_date(display_date, params[:channel], params[:show], params[:template], params[:search], params[:part_ids], nil, nil, display_date, display_date, params[:start_time], params[:end_time], params[:replace], nil, @ads_all, params[:ads_ids], params[:scroll_position]) %></td>
    </tr>
    <tr>
      <td><%= label_tag :start_time, 'Start Time', :class => 'date-time-table' %></td><td><%= text_field_tag :start_time, params[:start_time], :class => 'date-time-table', :onchange => 'this.form.submit()' %></td>
      <td><%= label_tag :end_time, 'End Time', :class => 'date-time-table' %></td><td><%= text_field_tag :end_time, params[:end_time], :class => 'date-time-table', :onchange => 'this.form.submit()' %></td>
    </tr>
  </table>
  <%= label_tag :replace, 'Replace existing scheduled specials', :class => 'random-template' %>
  <%= check_box_tag :replace, @replace, params[:replace], {:class => 'random-template', :onchange => 'this.form.submit()'} %><br/>
  
  <div class = 'pretend-button'>
    <% if @part_message[:issue] %>
      <div id="random-message"><%=h @part_message[:message] %></div>
    <% else %>
      <%= link_to 'Do The Part Scheduling', special_part_generate(display_date, params[:channel], params[:show], params[:template], params[:search], params[:part_ids], params[:start_date], params[:end_date], params[:start_time], params[:end_time], 
                                                                      params[:replace], params[:automated_dynamic_special_ids], params[:priority_ids], params[:ads_ids]), :confirm => @part_message[:message] %>
    <% end %>                                                                      
  </div>
  <span class = 'link_button'>
	<%= link_to 'Check all specials', special_part_with_date(display_date, params[:channel], params[:show], params[:template], params[:search], params[:part_ids], nil, nil, params[:start_date], 
                      params[:end_date], params[:start_time], params[:end_time], params[:replace], nil, @ads_all, params[:ads_ids], params[:scroll_position]) %> | 
  <%= link_to 'Uncheck all specials', special_part_with_date(display_date, params[:channel], params[:show], params[:template], params[:search], params[:part_ids], nil, nil, params[:start_date], 
                      params[:end_date], params[:start_time], params[:end_time], params[:replace], nil, nil, params[:ads_ids], params[:scroll_position]) %>
  </span>
  <% if @available.length == 0 %>
    <br/>
    <label>No valid specials for this channel and date range</label><br/>
  <% end %>
  <table>
    <tr>
      <th></th>
      <th>Name</th>
      <th>Part</th>
      <th>Template</th>
      <th>First Use</th>
      <th>Last Use</th>
      <th>Status</th>
    </tr>
  <% @available.each do |automated_dynamic_special| %>
    <tr>
      <td><%= check_box_tag "automated_dynamic_special_ids[]", automated_dynamic_special.id, automated_dynamic_special.checked, {:class => 'checks', :onchange => 'this.form.submit()'}  %></td>
      <td><%=h automated_dynamic_special.name %></td>
      <td><%= select_tag "part_ids[]", options_for_select(@parts, automated_dynamic_special.schedule_part),{:onchange => 'this.form.submit()'} %><%= hidden_field_tag "ads_ids[]", automated_dynamic_special.id %></td>
      <td><%=h automated_dynamic_special.template_name %></td>
      <td><%=h automated_dynamic_special.first_use.to_s(:broadcast_datetime) %></td>
      <td><%=h automated_dynamic_special.last_use.to_s(:broadcast_datetime) %></td>
      <td><%=h automated_dynamic_special.short_ready_message[:message] %></td>
      <td><%= link_to 'Show Special', automated_dynamic_special %></td>
    </tr>
  <% end %>
  </table>
  <%= hidden_field_tag "scroll_position", @scroll_position, {:id => 'hidden_scroll_position'}%>
</fieldset>

<% if @notes.present? %>
  <%= link_to "View Notes", special_schedule_log_path(@notes.to_i), {:target => '_blank'} %>
<% end %>
<% end %>
</div>
<script type="text/javascript">
  window.onload = setMyScroll
  window.addEventListener("scroll", (event) => {
    let scroll = this.scrollY;
    let myHiddenScroll = document.getElementById('hidden_scroll_position');
    myHiddenScroll.value = scroll;
  });

  function setMyScroll(){
    let myHiddenScroll = document.getElementById('hidden_scroll_position');
    window.scrollTo(0, myHiddenScroll.value);
  }
</script>